#!groovy

@Library('choshsh') _

pipeline {
  agent {
    kubernetes {
      yamlFile POD_TEMPLATE
      workspaceVolume hostPathWorkspaceVolume(hostPath: '/data')
    }
  }

  options {
    timeout(time: 10, unit: 'MINUTES')
  }

  stages {
    stage('Setup Repo') {
      steps {
        container('jdk') {
          dir(env.PROJECT_NAME) {
            git credentialsId: env.CRED_ID, url: env.GIT, branch: 'test'
          }
        }
      }
    }
    stage('Test') {
      steps {
        container('jdk') {
          dir(env.PROJECT_NAME) {
            sh "chmod +x gradlew"
            sh './gradlew clean test -g .gradle'
            junit "build/test-results/**/*.xml"
          }
        }
      }
    }
    stage('Build & Push') {
      environment {
        DOCKERHUB_PASSWORD = credentials("${env.DOCKERHUB_CRED_ID}")
      }
      steps {
        container('jdk') {
          dir(env.PROJECT_NAME) {
            sh './gradlew jib -Ptag=test -Djib.to.auth.username=$DOCKERHUB_USER -Djib.to.auth.password=$DOCKERHUB_PASSWORD -g .gradle'
          }
        }
      }
    }
    stage('Commit to deploy by ArgoCD') {
      environment {
        GITHUB_PASSWORD = credentials("${env.GITHUB_CRED_ID}")
      }
      steps {
        container('git') {
          sh '''
              git add "\$dirName/\$fileName"
              git commit --allow-empty -m "Push to master by jenkins pipeline"
              git push "https://$GITHUB_USER:$GITHUB_PASSWORD@51.2.30.83:8929/choshsh/kubernetes.git"
          '''
        }
      }
    }
  }
  post {
    always {
      slackSendCustom()
    }
  }
}