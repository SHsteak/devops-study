#!groovy
@Library('choshsh') _

pipeline {
  agent {
    kubernetes {
      yamlFile POD_TEMPLATE
    }
  }

  options {
    timeout(time: 5, unit: 'MINUTES')
  }

  parameters {
    string(name: 'SERVICE', defaultValue: '', description: 'Service to check (ex. sample.default.svc.cluster.local)')
    string(name: 'EXTERNAL_URL', defaultValue: 'google.com', description: 'External URL to check (ex. google.com)')
  }

  stages {
    stage('Debug CoreDNS') {
      parallel {
        stage('Debug with Pod') {
          steps {
            script {
              container('dnsutils') {
                // Check kubernetes DNS
                sh 'nslookup kubernetes.default'
                // Check DNS in Pod
                sh 'cat /etc/resolv.conf'
                // Check External DNS
                sh "nslookup ${params.EXTERNAL_URL}"
                // Check kubernetes service in Pod
                if (params.SERVICE) {
                  sh "nslookup ${params.SERVICE}"
                }
                echo 'Check for errors in CoreDNS pod. http://grafana.choshsh.com/d/XeS0yvN7z/kube-all-resource-log?orgId=1&var-namespace=kube-system&var-pod_name=All&var-container_name=coredns&var-searchable_pattern='
              }
            }
          }
        }
        // Trigger kubectl job - check k8s coredns resources
        stage('Check k8s resources') {
          steps {
            build job: 'kubectl', parameters: [
                    string(name: 'FUNC', value: 'check_coredns'),
                    string(name: 'NAMESPACE', value: "kube-system")
            ]
          }
        }
      }
    }
  }

  post {
    always {
      slackSendCustom()
    }
  }
}