pipeline {
  agent {
    kubernetes {
      yamlFile 'jenkins/pod_template/locust.yaml'
    }
  }

  options {
    timeout(time: 5, unit: 'MINUTES')
  }

  parameters {
    string(name: 'SERVICE', defaultValue: '', description: 'Service to check (ex. sample.default.svc.cluster.local)')
    string(name: 'EXTERNAL_URL', defaultValue: 'google.com', description: 'External URL to check (ex. google.com)')
  }

  stages {
    stage('Load Test') {
      parallel {
        stage('Init master') {
          steps {
            container('master') {
              sh 'locust -f script/locust.py --expect-workers 3 --master --headless -u 1 -r 1 --run-time 10s -H https://www.naver.com --csv=result'
            }
          }
        }
        stage('a') {
          steps {
            container("${STAGE_NAME}") {
              sleep(time: 3, unit: "SECONDS") 
              sh 'locust -f script/locust.py --worker --master-host localhost > /dev/null 2>&1'
            }
          }
        }
        stage('b') {
          steps {
            container("${STAGE_NAME}") {
              sleep(time: 3, unit: "SECONDS")
              sh 'locust -f script/locust.py --worker --master-host localhost > /dev/null 2>&1'
            }
          }
        }
        stage('c') {
          steps {
            container("${STAGE_NAME}") {
              sleep(time: 3, unit: "SECONDS")
              sh 'locust -f script/locust.py --worker --master-host localhost > /dev/null 2>&1'
            }
          }
        }
      }
    }
  }
  post{
    always {
      archiveArtifacts artifacts: '*.csv', fingerprint: true

      slackSend(color: "${currentBuild.currentResult  == 'SUCCESS' ? 'good' : 'danger'}", message: """
Job    : ${env.JOB_NAME} #${env.BUILD_NUMBER}
Status : ${currentBuild.currentResult}
URL    : ${env.BUILD_URL}
Params : ${params} 
      """)
    }
  }
}