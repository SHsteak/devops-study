pipeline {
  agent {
    kubernetes {
      yamlFile 'jenkins/pod_template/dnsutils.yaml'
    }
  }

  options {
    timeout(time: 5, unit: 'MINUTES')
  }

  parameters {
    string(name: 'SERVICE', defaultValue: '', description: 'Service to check (ex. sample.default.svc.cluster.local)')
    string(name: 'EXTERNAL_URL', defaultValue: 'google.com', description: 'External URL to check (ex. google.com)')
  }

  stages {
    stage('Debug DNS') {
      steps {
        script {
          container('dnsutils') {
            // Check kubernetes DNS
            sh 'nslookup kubernetes.default'
            sh 'cat /etc/resolv.conf'

            // Check local DNS
            sh "nslookup ${params.EXTERNAL_URL}"

            // Check kubernetes service
            if( params.SERVICE ) {
              sh "nslookup ${params.SERVICE}"
            }

            echo 'Check for errors in CoreDNS pod. http://loki-grafana.choshsh.com/d/dmO1A1Snz/logging-dashboard-via-loki?orgId=1&var-namespace=kube-system&var-pod_name=All&var-container_name=All&var-searchable_pattern=error&from=now-30m&to=now'
          }
        }
      }
      post{
        always {
          slackSend(color: "${currentBuild.currentResult  == 'SUCCESS' ? 'good' : 'danger'}", message: """
Job    : ${env.JOB_NAME} #${env.BUILD_NUMBER}
Status : ${currentBuild.currentResult}
URL    : ${env.BUILD_URL}
Params : ${params} 
          """)
        }
      }
    }
  }
}