pipeline {
  agent {
    kubernetes {
      yamlFile 'jenkins/pod_template/kubectl.yaml'
    }
  }

  parameters {
    string(name: 'FUNC', defaultValue: '', description: 'Bash script function name')
    string(name: 'NAMESPACE', defaultValue: 'default', description: 'Namespace')
    string(name: 'RESOURCE', defaultValue: '', description: 'Resource Name (ex. deployment, svc)')
    string(name: 'NAME', defaultValue: '', description: 'Name')
    string(name: 'REPLICAS', defaultValue: '', description: 'Number to scale deployment')
  }

  stages {
    stage('Test') {
      steps {
        script {
          container('kubectl') {
            stage("Validate Parameter") {
              if( !params.FUNC || !params.NAMESPACE || !params.RESOURCE || !params.NAME ){
                echo 'Parameter is invalid'
                return
              }else{
                echo 'Parameter is valid'
              }
            }
            stage("Exec kubectl") {
              dir('script') {
                sh 'pwd && ls -al'
                def FUNC = params.FUNC
                def NAMESPACE = params.NAMESPACE
                def RESOURCE = params.RESOURCE
                def NAME = params.NAME

                sh '''
                  echo ${NAMESPACE}
                  echo \${NAMESPACE}
                  export NAMESPACE=\$NAMESPACE
                  export RESOURCE=\$RESOURCE
                  export NAME=\$NAME

                  chmod +x kubectl_func.sh
                  
                  ./kubectl_func.sh \$FUNC
                '''
              }
            }
          }
        }
      }
    }
  }
}