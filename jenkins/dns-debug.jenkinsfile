pipeline {
  agent {
    kubernetes {
      yamlFile 'jenkins/pod_template/dnsutils.yaml'
    }
  }

  options {
    timeout(time: 5, unit: 'MINUTES')
  }

  parameters {
    string(name: 'SERVICE', defaultValue: '', description: 'Service to check (ex. sample.default.svc.cluster.local)')
    string(name: 'EXTERNAL_URL', defaultValue: 'google.com', description: 'External URL to check (ex. google.com)')
  }

  stages {
    stage('Debug DNS') {
      steps {
        script {
          container('dnsutils') {
            sh 'nslookup kubernetes.default'
            sh 'cat /etc/resolv.conf'

            def EXTERNAL_URL = params.EXTERNAL_URL
            sh "nslookup ${EXTERNAL_URL}"

            if( params.SERVICE ) {
              def SERVICE = params.SERVICE
              sh "nslookup ${SERVICE}"
            }

            echo 'Check for errors in CoreDNS pod. http://loki-grafana.choshsh.com/d/dmO1A1Snz/logging-dashboard-via-loki?orgId=1&var-namespace=kube-system&var-pod_name=All&var-container_name=All&var-searchable_pattern=error&from=now-30m&to=now'
          }
        }
      }
    }
    post{
        success {
          script {
            def slackResponse = slackSend(message: "SUCCESS: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
            slackResponse.addReaction("thumbsup")
          }
        }
        failure {
          script {
            def slackResponse = slackSend(message: "FAILURE: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
            slackResponse.addReaction("cry")
          }
        }
    }
  }
}