#!groovy

@Library('choshsh') _

pipeline {
  agent {
    kubernetes {
      yamlFile POD_TEMPLATE
      workspaceVolume persistentVolumeClaimWorkspaceVolume(claimName: 'jenkins-workspace', readOnly: false)
    }
  }

  options {
    timeout(time: 10, unit: 'MINUTES')
  }

  stages {
    stage('Setup Repo') {
      steps {
        container('jdk') {
          dir(env.PROJECT_NAME) {
            sh 'whoami'
            git credentialsId: env.CRED_ID, url: env.GIT, branch: 'test'
          }
        }
      }
    }
    stage('Test') {
      steps {
        container('jdk') {
          dir(env.PROJECT_NAME) {
            sh "chmod +x gradlew"
            sh "echo test >/mnt/.gradle-caches/123"
            sh "./gradlew clean test"
            junit "build/test-results/**/*.xml"
          }
        }
      }
    }
//    stage('Build & Push') {
//      environment {
//        DOCKERHUB_PASSWORD = credentials("${env.DOCKERHUB_CRED_ID}")
//      }
//      steps {
//        container('jdk') {
//          dir(env.PROJECT_NAME) {
//            sh "./gradlew jib -Djib.to.auth.password=${env.DOCKERHUB_PASSWORD} -Ptag=test"
//          }
//        }
//      }
//    }
  }
  post {
    always {
      slackSendCustom()
    }
  }
}