pipeline {
  agent {
    kubernetes {
      yamlFile 'jenkins/pod_template/kubectl.yaml'
    }
  }

  options {
    timeout(time: 10, unit: 'MINUTES')
  }

  parameters {
    string(name: 'FUNC', defaultValue: '', description: 'Bash script function name')
    string(name: 'NAMESPACE', defaultValue: '', description: 'Namespace')
    string(name: 'NAME', defaultValue: '-1', description: 'Name (-1 replaces null)')
    string(name: 'REPLICAS', defaultValue: '-1', description: 'Number to scale deployment (-1 replaces null)')
  }
  
  environment {
    FUNC = "${params.FUNC}"
    NAMESPACE = "${params.NAMESPACE}"
    NAME = "${params.NAME}"
    REPLICAS = "${params.REPLICAS}"
  }

  stages {
    stage('Kubectl') {
      steps {
        script {
          container('kubectl') {
            stage("Validate Parameter") {
              if( !params.FUNC || !params.NAMESPACE ){
                echo 'Parameter is invalid'
                return
              }else{
                echo 'Parameter is valid'
              }
            }
            stage("Exec kubectl") {
              dir('script') {
                echo "FUNC: $FUNC"
                echo "NAMESPACE: $NAMESPACE"
                if( "${NAME}" != "-1" ){
                  echo "NAME: $NAME"
                }
                if( "${REPLICAS}" != "-1" ){
                  echo "REPLICAS: $REPLICAS"
                }
                sh 'chmod +x kubectl_func.sh'
                sh './kubectl_func.sh $FUNC'
              }
            }
          }
        }
      }
    }
  }
}