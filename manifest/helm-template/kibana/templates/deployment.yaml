apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kibana.fullname" . }}
  labels:
    {{- include "kibana.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "kibana.selectorLabels" . | nindent 6 }}
      {{- toYaml .Values.deploy.labels | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kibana.selectorLabels" . | nindent 8 }}
        {{- toYaml .Values.deploy.labels | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kibana.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.hub }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: ELASTICSERCH_URL
              value: "{{ .Values.elasticsearch.host }}:{{ .Values.elasticsearch.port }}"
            - name: ELASTICSEARCH_HOSTS
              value: "{{ .Values.elasticsearch.host }}:{{ .Values.elasticsearch.port }}"
            - name: ELASTICSEARCH_USERNAME
              value: {{ .Values.elasticsearch.username | quote }}
            - name: ELASTICSEARCH_PASSWORD
              value: {{ .Values.elasticsearch.password | quote }}
            {{- toYaml .Values.env | nindent 12}}
          ports:
            - name: http
              containerPort: 5601
              protocol: TCP
          {{- range .Values.service.additionalPorts }}
            - name: {{ .name  }}
              containerPort: {{ .port }}
              protocol: {{ .protocol | default "TCP" }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.reverse.enabled }}
        - name: {{ .Chart.Name }}-reverse
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.hub }}/nginx:latest"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: reverse
              containerPort: {{ .Values.reverse.port }}
              protocol: TCP
          volumeMounts:
            - name: config-volume-reverse
              mountPath: /etc/nginx/conf.d
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.reverse.enabled }}
      volumes:
        - name: config-volume-reverse
          configMap:
            name: {{ include "kibana.fullname" . }}-reverse
      {{- end }}
---
{{- if .Values.reverse.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "kibana.fullname" . }}-reverse
  labels:
    {{- include "kibana.labels" . | nindent 4 }}
data:
  default.conf: |+
    server {
        listen       5602;
        listen  [::]:5602;
        server_name  localhost;

        charset utf-8;

        location /kibana {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            proxy_set_header  Host $host;
            proxy_set_header  X-Real-IP $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header  Authorization "Basic {{ printf "%s:%s" .Values.reverse.username .Values.reverse.password | b64enc }}";
            proxy_pass  http://127.0.0.1:5601/;
            rewrite ^/kibana/(.*)$ /$1 break;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
{{- end }}
