apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "was.fullname" . }}
  labels:
    {{- include "was.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "was.selectorLabels" . | nindent 6 }}
      {{- toYaml .Values.deploy.labels | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "was.selectorLabels" . | nindent 8 }}
        {{- toYaml .Values.deploy.labels | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "was.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.hub }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.deploy.containerPort }}
              protocol: TCP
          env:
            - name: ACTUATOR_PATH
              value: {{ .Values.actuator.path }}
            {{- with .Values.deploy.env }}
              {{- toYaml . | nindent 12 }}
            {{- end}}
            # Configmap parameter from value file
            {{- $configmapName := .Values.deploy.envFromConfigMap.name }}
            {{- range $k, $v := .Values.deploy.envFromConfigMap.items }}
            - name: {{ $v }}
              valueFrom:
                configMapKeyRef:
                  name: {{ $configmapName }}
                  key: {{ $k }}
            {{- end }}
            # Secret parameter from value file
            {{- $secretName := .Values.deploy.envFromSecret.name }}
            {{- range $k, $v := .Values.deploy.envFromSecret.items }}
            - name: {{ $v }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secretName }}
                  key: {{ $k }}
            {{- end}}
          {{- with .Values.deploy.args }}
          args:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          readinessProbe:
            httpGet:
              path: "{{ .Values.actuator.path }}/health"
              port: http
            initialDelaySeconds: 30
            failureThreshold: 5
            periodSeconds: 5
            timeoutSeconds: 5
          {{- with .Values.deploy.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end}}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

