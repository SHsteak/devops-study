apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: etcd-backup
  namespace: kube-system
spec:
  accessModes:
    - ReadWriteMany
  volumeMode: Filesystem
  storageClassName: nfs-client
  resources:
    requests:
      storage: 5Gi
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: etcd-backup-cron
  namespace: kube-system
  labels:
    app: etcd-backup
spec:
  schedule: "*/30 * * * *"
  jobTemplate:
    metadata:
      labels:
        app: etcd-backup
    spec:
      ttlSecondsAfterFinished: 300
      template:
        spec:
          containers:
            - args:
                - -c
                - etcdctl --endpoints=https://127.0.0.1:2379 --cacert=/etc/kubernetes/pki/etcd/ca.crt
                  --cert=/etc/kubernetes/pki/etcd/healthcheck-client.crt --key=/etc/kubernetes/pki/etcd/healthcheck-client.key
                  snapshot save /backup/etcd-snapshot.db
              command:
                - /bin/sh
              env:
                - name: ETCDCTL_API
                  value: "3"
              image: k8s.gcr.io/etcd:3.5.0-0
              imagePullPolicy: IfNotPresent
              name: backup
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/kubernetes/pki/etcd
                  name: etcd-certs
                  readOnly: true
                - mountPath: /backup
                  name: backup
            - args:
                - -c
                - find /backup -type f -mtime +30 -name '*.db' -exec rm -- '{}' \;
              command:
                - /bin/sh
              image: busybox
              imagePullPolicy: IfNotPresent
              name: backup-purge
              volumeMounts:
                - mountPath: /backup
                  name: backup
          hostNetwork: true
          nodeSelector:
            node-role.kubernetes.io/master: ""
          restartPolicy: OnFailure
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          tolerations:
            - effect: NoSchedule
              operator: Exists
          volumes:
            - hostPath:
                path: /etc/kubernetes/pki/etcd
                type: DirectoryOrCreate
              name: etcd-certs
            - name: backup
              persistentVolumeClaim:
                claimName: etcd-backup
